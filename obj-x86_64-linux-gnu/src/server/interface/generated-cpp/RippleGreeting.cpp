/* Autogenerated with kurento-module-creator */

#include "RippleGreeting.hpp"
#include <mutex>

namespace kurento
{
namespace module
{
namespace ripplegreeting
{

static std::vector<std::string> hierarchyRippleGreeting;
std::once_flag initFlagRippleGreeting;

static void
initHierarchy ()
{
  hierarchyRippleGreeting.emplace_back("kurento.OpenCVFilter");
  hierarchyRippleGreeting.emplace_back("kurento.Filter");
  hierarchyRippleGreeting.emplace_back("kurento.MediaElement");
  hierarchyRippleGreeting.emplace_back("kurento.MediaObject");
}

const std::vector<std::string> &
RippleGreeting::getHierarchy () const
{
  std::call_once (initFlagRippleGreeting,initHierarchy);
  return hierarchyRippleGreeting;
}

const std::string&
RippleGreeting::getType () const {
  static std::string typeName = "RippleGreeting";

  return typeName;
}

const std::string&
RippleGreeting::getQualifiedType () const {
  static std::string qualifiedTypeName = getModule() + "." + getType();

  return qualifiedTypeName;
}

const std::string&
RippleGreeting::getModule () const {
  static std::string moduleName =  "ripplegreeting";

  return moduleName;
}

} /* ripplegreeting */
} /* module */
} /* kurento */
